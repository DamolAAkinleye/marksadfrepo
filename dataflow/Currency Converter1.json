{
	"name": "Currency Converter1",
	"properties": {
		"description": "Sample demo data flow to convert currencies",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ParquetInput1",
						"type": "DatasetReference"
					},
					"name": "USDCurrency"
				},
				{
					"dataset": {
						"referenceName": "CurrencyDatasetCAD1",
						"type": "DatasetReference"
					},
					"name": "CADSource"
				},
				{
					"dataset": {
						"referenceName": "MoviesD2",
						"type": "DatasetReference"
					},
					"name": "rateLookup"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "USDOutput1",
						"type": "DatasetReference"
					},
					"name": "USDSink"
				},
				{
					"dataset": {
						"referenceName": "CADOutput1",
						"type": "DatasetReference"
					},
					"name": "CADSink"
				}
			],
			"transformations": [
				{
					"name": "Union",
					"description": "The Union combines 2 streams together"
				},
				{
					"name": "NewCurrencyColumn",
					"description": "Create a new calculated column from currency rate"
				},
				{
					"name": "ConditionalSplit1",
					"description": "Split the data on state to create 2 streams"
				},
				{
					"name": "Lookup1"
				},
				{
					"name": "Aggregate1"
				}
			],
			"script": "\nparameters{\n\tCountryCode as string ('CAD')\n}\nsource(output(\n\t\tPK as integer,\n\t\tcol1 as string,\n\t\tcol2 as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false) ~> USDCurrency\nsource(output(\n\t\tPreviousConversionRate as double,\n\t\tCountry as string,\n\t\tDateTime1 as string,\n\t\tCurrentConversionRate as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> CADSource\nsource(output(\n\t\tmovie as string,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as string,\n\t\tRating as string,\n\t\t{Rotton Tomato} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> rateLookup\nUSDCurrency, CADSource union(byName: true)~> Union\nLookup1 derive(NewCurrencyRate = lesser(12 , 24)) ~> NewCurrencyColumn\nAggregate1 split(Country == 'USD',\n\tCountry == 'CAD',\n\tdisjoint: false) ~> ConditionalSplit1@(USD, CAD)\nUnion, rateLookup lookup(Country == movie,\n\tbroadcast: 'none')~> Lookup1\nNewCurrencyColumn aggregate(each(match(type == 'string'),  $$ + '_len' = max(length($$)))) ~> Aggregate1\nConditionalSplit1@USD sink(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> USDSink\nConditionalSplit1@CAD sink(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> CADSink"
		}
	}
}