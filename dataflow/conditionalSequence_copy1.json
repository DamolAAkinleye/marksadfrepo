{
	"name": "conditionalSequence_copy1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MoviesD2",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "folderout",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "CreateDummyValue"
				},
				{
					"name": "AddPreviousValue"
				},
				{
					"name": "CompareAndBucket"
				}
			],
			"script": "source(output(\n\t\tmovie as integer,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as integer,\n\t\tRating as integer,\n\t\tRottenTomato as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> source1\nsource1 derive(dummy = 1) ~> CreateDummyValue\nCreateDummyValue window(over(dummy),\n\tasc(year, true),\n\tstartRowOffset: -1L,\n\tendRowOffset: 0L,\n\tyear2 = first(year)) ~> AddPreviousValue\nAddPreviousValue window(over(dummy),\n\tasc(year, true),\n\tcolumn1 = sum(iif(abs(year-year2)<=1,0,1))) ~> CompareAndBucket\nCompareAndBucket sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}