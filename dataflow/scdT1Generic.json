{
	"name": "scdT1Generic",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "BlobInputFolder",
						"type": "DatasetReference"
					},
					"name": "NewMember"
				},
				{
					"dataset": {
						"referenceName": "ParameterTable",
						"type": "DatasetReference"
					},
					"name": "ExistingMembers"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "PickCols1"
				},
				{
					"name": "PickCols2"
				},
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "Join1"
				}
			],
			"script": "\n\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> NewMember\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ExistingMembers\nNewMember derive(businesskey1 = toString(byPosition(2)),\n\t\tname1 = toString(byPosition(6))) ~> PickCols1\nExistingMembers derive(each(match(instr(name, 'ID') > 0), 'surrogatekey2' = toInteger($$)),\n\t\teach(match(instr(name,'Number') >0), 'businesskey2' = toString($$))) ~> PickCols2\nPickCols2 derive(surrogatekey2 = toInteger(byName('surrogatekey2')),\n\t\tbusinesskey2 = toString(byName('businesskey2'))) ~> MapDrifted1\nPickCols1, MapDrifted1 join(businesskey1 == businesskey2,\n\tjoinType:'left',\n\tbroadcast: 'none')~> Join1"
		}
	}
}