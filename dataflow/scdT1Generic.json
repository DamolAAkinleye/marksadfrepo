{
	"name": "scdT1Generic",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "BlobInputFolder",
						"type": "DatasetReference"
					},
					"name": "NewMembers"
				},
				{
					"dataset": {
						"referenceName": "ParameterTable",
						"type": "DatasetReference"
					},
					"name": "ExistingMembers"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ParquetOutput",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "PickCols1"
				},
				{
					"name": "PickCols2"
				}
			],
			"script": "\n\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> NewMembers\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ExistingMembers\nNewMembers derive(businesskey1 = toString(byPosition(2)),\n\t\t{} = ERROR_FUNCTION('')) ~> PickCols1\nExistingMembers derive(each(match(instr(name, 'ID') > 0), 'surrogatekey2' = toInteger($$)),\n\t\teach(match(instr(name,'Number') >0), 'businesskey2' = toString($$))) ~> PickCols2\nPickCols1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\ttruncate: true) ~> sink1"
		}
	}
}