{
	"name": "median_copy1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MoviesD2",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "CalcMedian"
				},
				{
					"name": "CollectAndCount"
				},
				{
					"name": "RowNumByYear"
				},
				{
					"name": "FindMiddleRowNum"
				}
			],
			"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> source1\nCollectAndCount derive(median = ratingsCollection[iif(toInteger(round(ratingsCount/2))==0,1,toInteger(round(ratingsCount/2)))]) ~> CalcMedian\nFindMiddleRowNum aggregate(groupBy(year = year),\n\tratingsCollection = collect(Rating),\n\t\tratingsCount = count()) ~> CollectAndCount\nsource1 window(over(year = year),\n\tasc(Rating, true),\n\trownum = rowNumber()) ~> RowNumByYear\nRowNumByYear window(over(year = year),\n\tasc(rownum, true),\n\tmedianrow = toInteger(round(max(rownum)/2))) ~> FindMiddleRowNum\nCalcMedian sink(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}