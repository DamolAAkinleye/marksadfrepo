{
	"name": "writeHeaders",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MoviesD2",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "MoviesD2Header",
						"type": "DatasetReference"
					},
					"name": "sourceJustHeaders"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "folderout_noheaders",
						"type": "DatasetReference"
					},
					"name": "sinkJustHeader"
				},
				{
					"dataset": {
						"referenceName": "folderout",
						"type": "DatasetReference"
					},
					"name": "sinkFullData"
				}
			],
			"transformations": [
				{
					"name": "rowCount"
				},
				{
					"name": "zeroRowsCheck"
				},
				{
					"name": "SurrogateKey1"
				},
				{
					"name": "justHeaderRow"
				},
				{
					"name": "Union1"
				},
				{
					"name": "Union2"
				},
				{
					"name": "origdata"
				},
				{
					"name": "Filter1"
				},
				{
					"name": "removeNulls1"
				},
				{
					"name": "removeNulls2"
				}
			],
			"script": "source(output(\n\t\tmovie as string,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as string,\n\t\tRating as string,\n\t\tRottenTomato as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> source1\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> sourceJustHeaders\nFilter1 aggregate(rowcount = count()) ~> rowCount\nrowCount split(rowcount == 0,\n\tdisjoint: false) ~> zeroRowsCheck@(zeroRows, default)\nsourceJustHeaders keyGenerate(output(rownum as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 filter(rownum == 1) ~> justHeaderRow\nzeroRowsCheck@zeroRows, justHeaderRow union(byName: true)~> Union1\nzeroRowsCheck@default, origdata union(byName: true)~> Union2\nFilter1 select(mapColumn(\n\t\tmovie,\n\t\ttitle,\n\t\tgenres,\n\t\tyear,\n\t\tRating\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> origdata\nsource1 filter(true()) ~> Filter1\nUnion1 filter(rownum == 1) ~> removeNulls1\nUnion2 filter(isNull(rowcount)) ~> removeNulls2\nremoveNulls1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['movienoheaders.csv'],\n\tmapColumn(\n\t\teach(match(name!='rowcount'&&name!='rownum'))\n\t),\n\tpartitionBy('hash', 1)) ~> sinkJustHeader\nremoveNulls2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['moviewithheaders.csv'],\n\tmapColumn(\n\t\teach(match(name!='rowcount'&&name!='rownum'))\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkFullData"
		}
	}
}