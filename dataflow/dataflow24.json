{
	"name": "dataflow24",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "SAPHR"
				},
				{
					"dataset": {
						"referenceName": "MoviesD2",
						"type": "DatasetReference"
					},
					"name": "CSV"
				},
				{
					"name": "CSV2"
				}
			],
			"sinks": [
				{
					"name": "HRSink"
				},
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "CanonicalModel"
				},
				{
					"name": "Aggregate1"
				}
			],
			"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> SAPHR\nsource(output(\n\t\tmovie as string,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as string,\n\t\tRating as string,\n\t\tRottenTomato as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> CSV\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> CSV2\nCSV select(mapColumn(\n\t\tlastname = title,\n\t\ttitle = genres,\n\t\tdatestarted = year,\n\t\tband = Rating,\n\t\tlastreview = RottenTomato,\n\t\teach(match(regexMatch(name,'^first.name')),\n\t\t\t'firstname' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CanonicalModel\nCanonicalModel aggregate(howmanyl64 = countIf(band == 'l64')) ~> Aggregate1\nAggregate1 sink(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> HRSink\nCSV2 sink(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}