{
	"name": "cosmosUpdate",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "cosmosMovie",
						"type": "DatasetReference"
					},
					"name": "moviesCosmos"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "cosmosMovie",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "MakeHierarchy"
				},
				{
					"name": "updatePolicy"
				}
			],
			"script": "\n\nsource(output(\n\t\tmovies as (year as string, genres as string[], rating as string, title as string),\n\t\ttitlekey as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tformat: 'document',\n\tsystemColumns: true,\n\tthroughput: 2000) ~> moviesCosmos\nmoviesCosmos derive(movies = @(year=movies.year,\n\t\tgenres=movies.genres,\n\t\trating=movies.rating*10,\n\t\ttitle=movies.title)\n) ~> MakeHierarchy\nMakeHierarchy alterRow(updateIf(true())) ~> updatePolicy\nupdatePolicy sink(input(\n\t\tmovies as (year as string, genres as string[], rating as string, title as string),\n\t\ttitlekey as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tformat: 'document',\n\tpartitionKey: ['/titlekey'],\n\tthroughput: 2000,\n\tmapColumn(\n\t\ttitlekey,\n\t\tid,\n\t\tmovies = MakeHierarchy@movies\n\t)) ~> sink1"
		}
	}
}