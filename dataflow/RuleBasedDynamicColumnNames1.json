{
	"name": "RuleBasedDynamicColumnNames1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "movie_dataflow_source11",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "OutputContainer1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "RenameColumns"
				},
				{
					"name": "Casting"
				},
				{
					"name": "FixNames"
				},
				{
					"name": "RemoveOldNames"
				}
			],
			"script": "source(output(\n\t\tmovie as string,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as string,\n\t\tRating as string,\n\t\t{Rotton Tomato} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> source1\nFixNames derive(each(match(type=='string'), $$ + '_trimmed' = trim(toString($$))),\n\t\teach(match(type=='integer'), 'int_' + $$ = toInteger($$))) ~> RenameColumns\nsource1 derive(year = toInteger(year),\n\t\tmovie = toInteger(movie),\n\t\tRating = toInteger(Rating),\n\t\t{Rotton Tomato} = toInteger({Rotton Tomato})) ~> Casting\nCasting select(mapColumn(\n\t\tmovie,\n\t\ttitle,\n\t\tgenres,\n\t\tyear,\n\t\trating = Rating,\n\t\trottentomato = {Rotton Tomato}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FixNames\nRenameColumns select(mapColumn(\n\t\teach(patternMatch(`_`))\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> RemoveOldNames\nRemoveOldNames sink(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> sink1"
		}
	}
}