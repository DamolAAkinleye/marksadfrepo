{
	"name": "datalakeCrud",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "moviechanges",
						"type": "DatasetReference"
					},
					"name": "dailyChanges",
					"script": "source(output(\n\t\tMovieId as integer,\n\t\tTitle as string,\n\t\tGenre as string,\n\t\tYear as integer,\n\t\tRating as integer,\n\t\tRottenTom as integer,\n\t\tAction as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> dailyChanges"
				},
				{
					"dataset": {
						"referenceName": "moviesout",
						"type": "DatasetReference"
					},
					"name": "targetFile",
					"script": "source(output(\n\t\tMovieId as integer,\n\t\tTitle as string,\n\t\tGenre as string,\n\t\tYear as integer,\n\t\tRating as integer,\n\t\tRottenTom as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> targetFile"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "moviesoutputfolder_parquet",
						"type": "DatasetReference"
					},
					"name": "sinkTargetFile",
					"script": "DedupeUpdates sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['moviesoutnew.parquet'],\n\tpartitionBy('hash', 1)) ~> sinkTargetFile"
				}
			],
			"transformations": [
				{
					"name": "SetActionUpdate",
					"script": "targetFile derive(Action = 'U') ~> SetActionUpdate"
				},
				{
					"name": "Union1",
					"script": "dailyChanges, SetActionUpdate union(byName: true)~> Union1"
				},
				{
					"name": "DedupeUpdates",
					"script": "RemoveDeletes aggregate(groupBy(MovieIdDupe = MovieId,\n\t\tActionDupe = Action),\n\tMovieId = first(MovieId),\n\t\tTitle = first(Title),\n\t\tGenre = first(Genre),\n\t\tYear = first(Year),\n\t\tRating = first(Rating),\n\t\tRottenTom = first(RottenTom),\n\t\tAction = first(Action)) ~> DedupeUpdates"
				},
				{
					"name": "DeletesOnly",
					"script": "dailyChanges filter(Action == 'D') ~> DeletesOnly"
				},
				{
					"name": "RemoveDeletes",
					"script": "Union1, DeletesOnly exists(Union1@MovieId == dailyChanges@MovieId,\n\tnegate:true,\n\tbroadcast: 'none')~> RemoveDeletes"
				}
			]
		}
	}
}