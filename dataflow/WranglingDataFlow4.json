{
	"name": "WranglingDataFlow4",
	"properties": {
		"type": "WranglingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "TripData1",
					"script": "",
					"dataset": {
						"referenceName": "TripData1",
						"type": "DatasetReference"
					},
					"typeProperties": {
						"readMode": null
					}
				},
				{
					"name": "TripFares1",
					"script": "",
					"dataset": {
						"referenceName": "TripFares1",
						"type": "DatasetReference"
					},
					"typeProperties": {
						"readMode": null
					}
				}
			],
			"sinks": [
				{
					"name": "Sink1",
					"dataset": {
						"referenceName": "folderout",
						"type": "DatasetReference"
					},
					"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['trips.csv'],\n\tpartitionBy('hash', 1)) ~> Sink1"
				}
			],
			"script": "section Section1; shared #\"TripData1\" = let AdfDoc = Web.Contents(\"https://makadlsg2.dfs.core.windows.net/sample-data/trip_data_1.csv?sv=2018-03-28&sig=1gCv0dM680fF8PfeTp6vZiId6EC9k64UQ0dMUPt2D0k%3D&spr=https&se=2019-11-13T21%3A08%3A53Z&srt=sco&ss=bf&sp=rwl\"),Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]), PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true]), TrimmedHeaders = Table.TransformColumnNames(PromotedHeaders, (columnName as text) as text => Text.Trim(columnName)) in TrimmedHeaders;shared #\"TripFares1\" = let AdfDoc = Web.Contents(\"https://makadlsg2.dfs.core.windows.net/sample-data/taxi_fares.csv?sv=2018-03-28&sig=1gCv0dM680fF8PfeTp6vZiId6EC9k64UQ0dMUPt2D0k%3D&spr=https&se=2019-11-13T21%3A08%3A53Z&srt=sco&ss=bf&sp=rwl\"),Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]), PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true]), TrimmedHeaders = Table.TransformColumnNames(PromotedHeaders, (columnName as text) as text => Text.Trim(columnName)) in TrimmedHeaders;shared UserQuery = let Source = #\"TripData1\" in Source;"
		}
	}
}